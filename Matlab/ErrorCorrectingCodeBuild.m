function ErrorCorrectingCodeBuild
% Build all required mex files for MapCode
% This function should be called once before any attempt to use MapCode
% The directoty path is automatically found
%   
    cxxFlags = ['-std=c++11'];
    iPath = {['-I' fullfile('../')]; ['-I' fullfile('../src')]};

    srcPath = '../src/';
    libsPath = '../libs/';
    trgPath = '';
    
    objDst = 'build';
    trgDst = 'product';
    
    src = {...
        'ErrorCorrectingCode.cpp'; ...
        'CodeStructure/CodeStructure.cpp'; ... 
        'CodeStructure/ConvolutionalCodeStructure.cpp'; ...
        'CodeStructure/TurboCodeStructure.cpp'; ...
        'CodeStructure/LdpcCodeStructure.cpp'; ...
        'CodeStructure/TrellisStructure.cpp'; ...
        'ConvolutionalCode/ConvolutionalCode.cpp'; ...
        'ConvolutionalCode/MapDecoder/MapDecoder.cpp'; ...
        'ConvolutionalCode/ViterbiDecoder/ViterbiDecoder.cpp'; ...
        'TurboCode/TurboCode.cpp'; ...
        'LdpcCode/LdpcCode.cpp'; ...
        'LdpcCode/BpDecoder/BpDecoder.cpp'; ...
    };

    libs = {
        'serialization/src/archive_exception.cpp'; ...
        'serialization/src/basic_archive.cpp'; ...
        'serialization/src/basic_iarchive.cpp'; ...
        'serialization/src/basic_iserializer.cpp'; ...
        'serialization/src/basic_oarchive.cpp'; ...
        'serialization/src/basic_oserializer.cpp'; ...
        'serialization/src/basic_pointer_iserializer.cpp'; ...
        'serialization/src/basic_pointer_oserializer.cpp'; ...
        'serialization/src/basic_serializer_map.cpp'; ...
        'serialization/src/basic_text_iprimitive.cpp'; ...
        'serialization/src/basic_text_oprimitive.cpp'; ...
        'serialization/src/basic_xml_archive.cpp'; ...
        'serialization/src/binary_iarchive.cpp'; ...
        'serialization/src/binary_oarchive.cpp'; ...
        'serialization/src/codecvt_null.cpp'; ...
        'serialization/src/extended_type_info_no_rtti.cpp'; ...
        'serialization/src/extended_type_info_typeid.cpp'; ...
        'serialization/src/extended_type_info.cpp'; ...
        'serialization/src/polymorphic_iarchive.cpp'; ...
        'serialization/src/polymorphic_oarchive.cpp'; ...
        'serialization/src/stl_port.cpp'; ...
        'serialization/src/text_iarchive.cpp'; ...
        'serialization/src/text_oarchive.cpp'; ...
        'serialization/src/text_wiarchive.cpp'; ...
        'serialization/src/text_woarchive.cpp'; ...
        'serialization/src/utf8_codecvt_facet.cpp'; ...
        'serialization/src/void_cast.cpp';...
        'serialization/src/xml_archive_exception.cpp'; ...
        'serialization/src/xml_iarchive.cpp'; ...
        'serialization/src/xml_oarchive.cpp'; ...
        'serialization/src/xml_grammar.cpp'; ...
        'serialization/src/basic_text_wiprimitive.cpp'; ...
        'serialization/src/basic_text_woprimitive.cpp'; ...
        'serialization/src/text_wiarchive.cpp';...
        'serialization/src/text_woarchive.cpp'; ...
        'serialization/src/xml_wiarchive.cpp'; ...
        'serialization/src/xml_woarchive.cpp'; ...
        'serialization/src/xml_wgrammar.cpp'; ...
        };
    
    trg = {...
        'nullHandle.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_get_paritySize.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_get_msgSize.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_get_extrinsicMsgSize.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_get_extrinsicParitySize.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_encode.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_decode.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_softOutDecode.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_appDecode.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_parityAppDecode.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_destructor.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_save.cpp'; ...
        '@ErrorCorrectingCode/ErrorCorrectingCode_load.cpp'; ...
        '@ConvolutionalCode/ConvolutionalCode_constructor.cpp'; ...
        '@TurboCode/TurboCode_constructor.cpp'; ...
        '@LdpcCode/LdpcCode_constructor.cpp'
        };
    
    
    
    oldpath = cd(strrep(which(fullfile('Matlab', 'ErrorCorrectingCodeBuild.m')), fullfile('ErrorCorrectingCodeBuild.m'), ''));
    mkdir build
    mkdir product
    
    objs = '';
    for i = 1:length(src)
        [pathstr,name,ext] = fileparts(src{i});
        obj = ['build/' name '.o'];
        objs{length(objs)+1} = obj;
        
        objInfo = dir(obj);
        srcInfo = dir([srcPath src{i}]);
        if (isempty(objInfo) || objInfo.datenum < srcInfo.datenum)
            mex(['CXXFLAGS="\$CXXFLAGS ' cxxFlags '"'], iPath{:}, '-outdir', objDst, '-c', [srcPath src{length(objs)}]);
        else
            disp('skip');
        end
    end
    for i = 1:length(libs)
        [pathstr,name,ext] = fileparts(libs{i});
        obj = ['build/' name '.o'];
        objs{length(objs)+1} = obj;

        objInfo = dir(obj);
        srcInfo = dir([libsPath libs{i}]);
        if (isempty(objInfo) || objInfo.datenum < srcInfo.datenum)
            mex(['CXXFLAGS="\$CXXFLAGS ' cxxFlags '"'], iPath{:}, '-outdir', objDst, '-c', [libsPath libs{i}]);
        else
        disp('skip');
        end
    end

    for i = 1:length(trg)
        mex(['CXXFLAGS="\$CXXFLAGS ' cxxFlags '"'], iPath{:}, '-largeArrayDims', '-outdir', trgDst, [trgPath trg{i}], objs{:});
    end
    

    %delete build/*
    %rmdir build
    cd(oldpath)
end
    